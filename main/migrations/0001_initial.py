# Generated by Django 3.0.7 on 2020-07-05 20:24

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import main.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('company_name', models.CharField(max_length=100, verbose_name='Company Name: ')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', main.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=75)),
                ('number', models.FloatField()),
                ('slug', models.SlugField()),
                ('users', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='engagement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Engagement Name: ')),
                ('date', models.DateField()),
                ('slug', models.SlugField()),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.client')),
            ],
        ),
        migrations.CreateModel(
            name='participant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('SSN', models.CharField(max_length=11)),
                ('DOB', models.DateField()),
                ('DOH', models.DateField()),
                ('DOT', models.DateField(blank=True, null=True)),
                ('DORH', models.DateField(blank=True, null=True)),
                ('excluded', models.BooleanField(blank=True, null=True)),
                ('gross_wages', models.FloatField(blank=True, null=True)),
                ('eligible_wages', models.FloatField(blank=True, null=True)),
                ('hours_worked', models.FloatField(blank=True, null=True)),
                ('EE_pre_tax_amount', models.FloatField(blank=True, null=True)),
                ('ER_pre_tax_amount', models.FloatField(blank=True, null=True)),
                ('EE_roth_amount', models.FloatField(blank=True, null=True)),
                ('ER_roth_amount', models.FloatField(blank=True, null=True)),
                ('EE_catch_up', models.FloatField(blank=True, null=True)),
                ('ER_catch_up', models.FloatField(blank=True, null=True)),
                ('effective_deferral_percentage', models.FloatField(blank=True, null=True)),
                ('selection', models.BooleanField(blank=True, null=True)),
                ('key_employee', models.BooleanField(blank=True, null=True)),
                ('eligible', models.BooleanField(blank=True, null=True)),
                ('participating', models.BooleanField(blank=True, null=True)),
                ('engagement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.engagement')),
            ],
        ),
        migrations.CreateModel(
            name='eligibility_rules',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age', models.IntegerField(blank=True, null=True)),
                ('service_hours', models.IntegerField(blank=True, null=True)),
                ('service_days', models.IntegerField(blank=True, null=True)),
                ('service_months', models.IntegerField(blank=True, null=True)),
                ('service_years', models.IntegerField(blank=True, null=True)),
                ('excluded_employees', models.TextField(blank=True, null=True)),
                ('entry_date', models.CharField(choices=[('Immediately', 'Immediately'), ('First day of following Month', 'First day of following month'), ('Semi Annual (Jan 1 or July 1)', 'Semi Annual (Jan 1 or July 1)'), ('Annual (Jan 1)', 'Annual (Jan 1)')], default='Immediately', max_length=50)),
                ('engagement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.engagement')),
            ],
        ),
    ]
